axis.line.x=element_line(linetype=1),
axis.line.y=element_line(linetype=1))
ggplot() +
geom_raster(data = imported_raster_df, aes(x = x, y = y, fill = BRCR_BAU_Year0)) +
coord_quickmap()+my.theme+ theme(legend.position = "none")
ggplot() +
geom_raster(data = imported_raster_df, aes(x = x, y = y, fill = BRCR_BAU_Year0)) +
coord_quickmap()+ theme(legend.position = "none")
ggplot() +
geom_raster(data = imported_raster_df, aes(x = x, y = y, fill = BRCR_BAU_Year0))
ggplot() +
geom_raster(data = imported_raster_df, aes(x = x, y = y, col = BRCR_BAU_Year0, fill = BRCR_BAU_Year0)) +
theme(legend.position = "none")
library(viridis)
ggplot() +
geom_raster(data = imported_raster_df, aes(x = x, y = y, fill = BRCR_BAU_Year0)) +
theme(legend.position = "none") +
scale_fill_viridis_c()
imported_raster_df <- imported_raster_df %>%
mutate(meandens = cut(BRCR_BAU_Year0, breaks = 10))
ggplot() +
geom_raster(data = imported_raster_df, aes(x = x, y = y, fill = meandens)) +
theme(legend.position = "none") +
scale_fill_viridis_c()
ggplot() +
geom_raster(data = imported_raster_df, aes(x = x, y = y, fill = meandens)) +
theme(legend.position = "none")
plot(imported_raster,axes=F)
plot(imported_raster,
axes=F, box=F)
plot(imported_raster,
axes=F, box=F, legend=F)
plot(imported_raster,axes=F,useRaster=F)
plot(imported_raster,axes=F,useRaster=F,legend=F)
image(imported_raster,axes=F,useRaster=F,legend=F)
plot(imported_raster)
library(dplyr)
library(tidyr)
library(raster)
library(maptools)
library(ncdf4)
install.packages("ncdf4")
library(ncdf4)
library(rasterVis)
library(RColorBrewer)
library(zoo)
library(ggplot2)
library(gridExtra)
library(grid)
my.theme <- theme_classic() +
theme(text=element_text(size=16, family="Arial"),
axis.text.x=element_text(size=16),
axis.text.y=element_text(size=16),
axis.title.x=element_text(margin=margin(10,0,0,0)),
axis.title.y=element_text(margin=margin(0,10,0,0)),
axis.line.x=element_line(linetype=1),
axis.line.y=element_line(linetype=1))
DIR<-getwd()
#str_name<-'BRCR_BAU_Year0.tif'
imported_raster=raster(paste0(DIR,"/prediction rasters/","BRCR_BAU_Year0.tif"))
imported_raster
levelplot(imported_raster)
levelplot(imported_raster, margin=F)
imported_raster_df <- as.data.frame(imported_raster, xy = TRUE)
str(imported_raster_df)
imported_raster_df$meandens = ifelse(imported_raster_df$BRCR_BAU_Year0<0.125,0,
ifelse(imported_raster_df$BRCR_BAU_Year0<0.375,0.25,
ifelse(imported_raster_df$BRCR_BAU_Year0<0.625,0.5,
ifelse(imported_raster_df$BRCR_BAU_Year0<0.75,0.625,
ifelse(imported_raster_df$BRCR_BAU_Year0<0.875,0.75,
ifelse(imported_raster_df$BRCR_BAU_Year0<1,0.875,
ifelse(imported_raster_df$BRCR_BAU_Year0<1.5,1,
ifelse(imported_raster_df$BRCR_BAU_Year0<2.5,2,
ifelse(imported_raster_df$BRCR_BAU_Year0<3.5,3,4)))))))))
str(imported_raster_df)
r2<-rasterFromXYZ(imported_raster_df[,c("x","y","meandens")],res=c(200,200),crs="+proj=tmerc +lat_0=0 +lon_0=-115 +k=0.9992 +x_0=500000 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0")                                                                                      ifelse(imported_raster_df$BRCR_BAU_Year0<3.5,3,4)))))))))
crs(imported_raster)
CRS.new<-crs(imported_raster)
r.new<-rasterFromXYZ(imported_raster_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
r.new<-rasterFromXYZ(imported_raster_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
levelplot(r.new)
levelplot(r.new, margin=F)
levelplot(r.new, margin=F, box=F, axes=F)
levelplot(r.new, margin=F, par.settings = list(axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
levelplot(r.new, margin=F,
par.settings = list(region = brewer.pal(8, "Greens"), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
levelplot(r.new, margin=F,
par.settings = list(rasterTheme(region = brewer.pal(8, "Greens")), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
mapTheme<-rasterTheme(region = brewer.pal(8, "Greens"))
levelplot(r.new, margin=F, par.settings=mapTheme,
par.settings = list(raxis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
levelplot(r.new, margin=F,
par.settings = list(mapTheme, raxis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
p1<-levelplot(r.new, margin=F,
par.settings = list(raxis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
par(mfrow=c(1,2))
p1
p1
library(dplyr)
library(tidyr)
library(raster)
library(maptools)
library(ncdf4)
library(rasterVis)
library(RColorBrewer)
library(zoo)
library(ggplot2)
library(gridExtra)
library(grid)
my.theme <- theme_classic() +
theme(text=element_text(size=16, family="Arial"),
axis.text.x=element_text(size=16),
axis.text.y=element_text(size=16),
axis.title.x=element_text(margin=margin(10,0,0,0)),
axis.title.y=element_text(margin=margin(0,10,0,0)),
axis.line.x=element_line(linetype=1),
axis.line.y=element_line(linetype=1))
DIR<-getwd()
r0.brcr.bau=raster(paste0(DIR,"/prediction rasters/","BRCR_BAU_Year0.tif"))
r50.brcr.bau=raster(paste0(DIR,"/prediction rasters/","BRCR_BAU_Year50.tif"))
r0.brcr.0fire=raster(paste0(DIR,"/prediction rasters/","BRCR_NoFire_Year0.tif"))
r50.brcr.0fire=raster(paste0(DIR,"/prediction rasters/","BRCR_NoFire_Year50.tif"))
r0.brcr.2xfire=raster(paste0(DIR,"/prediction rasters/","BRCR_IncreasedFire_Year0.tif"))
r50.brcr.2xfire=raster(paste0(DIR,"/prediction rasters/","BRCR_IncreasedFire_Year50.tif"))
levelplot(r0.brcr.bau, margin=F)
r0.brcr.bau_df <- as.data.frame(r0.brcr.bau, xy = TRUE)
str(r0.brcr.bau_df)
r0.brcr.bau_df$meandens = ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<0.125,0,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<0.375,0.25,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<0.625,0.5,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<0.75,0.625,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<0.875,0.75,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<1,0.875,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<1.5,1,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<2.5,2,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<3.5,3,4)))))))))
CRS.new<-crs(r0.brcr.bau)
r0.brcr.bau<-rasterFromXYZ(r0.brcr.bau_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
#get rid of box, axes, axis values
levelplot(r0.brcr.bau, margin=F, par.settings = list(axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
mapTheme<-rasterTheme(region = brewer.pal(8, "Greens"))
p1<-levelplot(r0.brcr.bau, margin=F,
par.settings = mapTheme)
p1
p1<-levelplot(r0.brcr.bau, margin=F,
par.settings = par.settings = list(maptheme, axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
levelplot(r0.brcr.bau, par.settings=RdBuTheme(), shrink=c(.8, 15), border='black')
levelplot(r0.brcr.bau, margin=F, par.settings=RdBuTheme(), shrink=c(.8, 15), border='black')
levelplot(r0.brcr.bau, margin=F, par.settings=RdBuTheme(), shrink=c(.8, 15), border='black')
levelplot(r0.brcr.bau, margin=F, par.settings=RdBuTheme(), shrink=c(.8, 15))
levelplot(r0.brcr.bau, margin=F, par.settings=RdBuTheme())
levelplot(r0.brcr.bau, margin=F, par.settings=RdYwGnTheme())
levelplot(r0.brcr.bau, margin=F, par.settings=RdGnTheme())
levelplot(r0.brcr.bau, margin=F, par.settings=BuRdTheme())
levelplot(r50.brcr.2xfire-r0.brcr.2xfire, margin=F)
delta50.brcr.2xfire<-r50.brcr.2xfire-r0.brcr.2xfire
delta50.brcr.2xfire_df <- as.data.frame(delta50.brcr.2xfire, xy = TRUE)
str(delta50.brcr.2xfire_df)
delta50.brcr.2xfire_df$meandens = ifelse(delta50.brcr.2xfire_df$layer<0.125,0,
ifelse(delta50.brcr.2xfire_df$layer<0.375,0.25,
ifelse(delta50.brcr.2xfire_df$layer<0.625,0.5,
ifelse(delta50.brcr.2xfire_df$layer<0.75,0.625,
ifelse(delta50.brcr.2xfire_df$layer<0.875,0.75,
ifelse(delta50.brcr.2xfire_df$layer<1,0.875,
ifelse(delta50.brcr.2xfire_df$layer<1.5,1,
ifelse(delta50.brcr.2xfire_df$layer<2.5,2,
ifelse(delta50.brcr.2xfire_df$layer<3.5,3,4)))))))))
delta50.brcr.2xfire_df$meandens = ifelse(delta50.brcr.2xfire_df$layer<-4,-4,
ifelse(delta50.brcr.2xfire_df$layer<-3,-3,
ifelse(delta50.brcr.2xfire_df$layer<-2,-2,
ifelse(delta50.brcr.2xfire_df$layer<-1,-1,
ifelse(delta50.brcr.2xfire_df$layer<-0.25,-0.5,
ifelse(delta50.brcr.2xfire_df$layer<0.25,0,
ifelse(delta50.brcr.2xfire_df$layer<0.75,0.5,
ifelse(delta50.brcr.2xfire_df$layer<1.5,1,
ifelse(delta50.brcr.2xfire_df$layer<2.5,2,
ifelse(delta50.brcr.2xfire_df$layer<3.5,3,4))))))))))
CRS.new<-crs(delta50.brcr.2xfire)
delta50.brcr.2xfire<-rasterFromXYZ(delta50.brcr.2xfire_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
levelplot(delta50.brcr.2xfire, margin=F)
delta50.brcr.2xfire_df$layer
r0.brcr.2xfire=raster(paste0(DIR,"/prediction rasters/","BRCR_IncreasedFire_Year0.tif"))
r50.brcr.2xfire=raster(paste0(DIR,"/prediction rasters/","BRCR_IncreasedFire_Year50.tif"))
r0.brcr.2xfire_df <- as.data.frame(r0.brcr.2xfire, xy = TRUE)
str(r0.brcr.2xfire_df)
r0.brcr.2xfire_df$meandens = ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.125,0,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.375,0.25,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.625,0.5,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.75,0.625,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.875,0.75,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<1,0.875,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<1.5,1,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<2.5,2,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<3.5,3,4)))))))))
CRS.new<-crs(r0.brcr.2xfire)
r0.brcr.2xfire<-rasterFromXYZ(r0.brcr.2xfire_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
r50.brcr.2xfire_df <- as.data.frame(r50.brcr.2xfire, xy = TRUE)
str(r50.brcr.2xfire_df)
r50.brcr.2xfire_df$meandens = ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.125,0,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.375,0.25,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.625,0.5,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.75,0.625,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.875,0.75,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year0<1,0.875,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year0<1.5,1,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year0<2.5,2,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year0<3.5,3,4)))))))))
CRS.new<-crs(r50.brcr.2xfire)
r50.brcr.2xfire<-rasterFromXYZ(r50.brcr.2xfire_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
r50.brcr.2xfire_df$meandens = ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<0.125,0,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<0.375,0.25,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<0.625,0.5,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<0.75,0.625,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<0.875,0.75,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<1,0.875,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<1.5,1,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<2.5,2,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<3.5,3,4)))))))))
CRS.new<-crs(r50.brcr.2xfire)
r50.brcr.2xfire<-rasterFromXYZ(r50.brcr.2xfire_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
levelplot(r50.brcr.2xfire-r0.brcr.2xfire, margin=F)
inc.fire<-levelplot(r50.brcr.2xfire-r0.brcr.2xfire, margin=F)
r50.brcr.bau_df <- as.data.frame(r50.brcr.bau, xy = TRUE)
str(r50.brcr.bau_df)
r50.brcr.bau_df$meandens = ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<0.125,0,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<0.375,0.25,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<0.625,0.5,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<0.75,0.625,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<0.875,0.75,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<1,0.875,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<1.5,1,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<2.5,2,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<3.5,3,4)))))))))
CRS.new<-crs(r50.brcr.bau)
r50.brcr.bau<-rasterFromXYZ(r50.brcr.bau_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
bau<-levelplot(r50.brcr.bau-r0.brcr.bau, margin=F)
bau
bau<-levelplot(r50.brcr.bau-r0.brcr.bau, margin=F,
par.settings = list(axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
bau
bau<-levelplot(r50.brcr.bau-r0.brcr.bau, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
library(viridis)
bau<-levelplot(r50.brcr.bau-r0.brcr.bau, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
bau
inc.fire<-levelplot(r50.brcr.2xfire-r0.brcr.2xfire, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
inc.fire
grid.arrange(bau, inc.fire, ncol=2)
bau$par.settings$layout.heights[
c( 'bottom.padding',
'top.padding',
'key.sub.padding',
'axis.xlab.padding',
'key.axis.padding',
'main.key.padding') ] <- -1
bau$aspect.fill <- TRUE
inc.fire$par.settings$layout.heights[
c( 'bottom.padding',
'top.padding',
'key.sub.padding',
'axis.xlab.padding',
'key.axis.padding',
'main.key.padding') ] <- -1
inc.fire$aspect.fill <- TRUE
grid.arrange(bau, inc.fire, ncol=2)
grid.arrange(bau, inc.fire, ncol=2)
inc.fire<-levelplot(r50.brcr.2xfire-r0.brcr.2xfire, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
grid.arrange(bau, inc.fire, ncol=2)
bau<-levelplot(r50.brcr.bau-r0.brcr.bau, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"))
grid.arrange(bau, inc.fire, ncol=2)
bau$aspect.fill <- TRUE
inc.fire$aspect.fill <- TRUE
grid.arrange(bau, inc.fire, ncol=2)
grid.arrange(bau, inc.fire, ncol=2)
plot.new()
par(mfrow=c(1,2), oma=c(2,0,2,0))
print(bau, split=c(1, 1, 2, 1))
print(inc.fire, split=c(1, 2, 2, 1), newpage=FALSE)
bau<-levelplot(r50.brcr.bau-r0.brcr.bau, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main='Current Fire: Year 50 - Year 0')
inc.fire<-levelplot(r50.brcr.2xfire-r0.brcr.2xfire, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main='Increased Fire: Year 50 - Year 0')
grid.arrange(bau, inc.fire, ncol=2)
inc.fire<-levelplot(r50.brcr.2xfire-r0.brcr.2xfire, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main=list(label='Increased Fire: Year 50 - Year 0',cex=10))
#Year 50 - Year 0 (BAU scenario)
bau<-levelplot(r50.brcr.bau-r0.brcr.bau, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main=list(label='Current Fire: Year 50 - Year 0',cex=10))
grid.arrange(bau, inc.fire, ncol=2)
inc.fire<-levelplot(r50.brcr.2xfire-r0.brcr.2xfire, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main=list(label='Increased Fire: Year 50 - Year 0',cex=1))
#Year 50 - Year 0 (BAU scenario)
bau<-levelplot(r50.brcr.bau-r0.brcr.bau, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main=list(label='Current Fire: Year 50 - Year 0',cex=1))
grid.arrange(bau, inc.fire, ncol=2)
#Year 50-0
inc.fire<-levelplot(r50.brcr.2xfire-r0.brcr.2xfire, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main=list(label='Increased Fire: Year 50 - Year 0',cex=0.7))
#Year 50 - Year 0 (BAU scenario)
bau<-levelplot(r50.brcr.bau-r0.brcr.bau, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main=list(label='Current Fire: Year 50 - Year 0',cex=0.7))
grid.arrange(bau, inc.fire, ncol=2)
library(dplyr)
library(tidyr)
library(raster)
library(maptools)
library(ncdf4)
library(rasterVis)
library(RColorBrewer)
library(zoo)
library(ggplot2)
library(gridExtra)
library(grid)
library(viridis)
my.theme <- theme_classic() +
theme(text=element_text(size=16, family="Arial"),
axis.text.x=element_text(size=16),
axis.text.y=element_text(size=16),
axis.title.x=element_text(margin=margin(10,0,0,0)),
axis.title.y=element_text(margin=margin(0,10,0,0)),
axis.line.x=element_line(linetype=1),
axis.line.y=element_line(linetype=1))
DIR<-getwd()
r0.brcr.bau=raster(paste0(DIR,"/prediction rasters/","BRCR_BAU_Year0.tif"))
r50.brcr.bau=raster(paste0(DIR,"/prediction rasters/","BRCR_BAU_Year50.tif"))
r0.brcr.0fire=raster(paste0(DIR,"/prediction rasters/","BRCR_NoFire_Year0.tif"))
r50.brcr.0fire=raster(paste0(DIR,"/prediction rasters/","BRCR_NoFire_Year50.tif"))
r0.brcr.2xfire=raster(paste0(DIR,"/prediction rasters/","BRCR_IncreasedFire_Year0.tif"))
r50.brcr.2xfire=raster(paste0(DIR,"/prediction rasters/","BRCR_IncreasedFire_Year50.tif"))
#Basic rasterVis plot
levelplot(r0.brcr.bau, margin=F)
#Year 0 (BAU scenario)
r0.brcr.bau_df <- as.data.frame(r0.brcr.bau, xy = TRUE)
str(r0.brcr.bau_df)
r0.brcr.bau_df$meandens = ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<0.125,0,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<0.375,0.25,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<0.625,0.5,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<0.75,0.625,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<0.875,0.75,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<1,0.875,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<1.5,1,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<2.5,2,
ifelse(r0.brcr.bau_df$BRCR_BAU_Year0<3.5,3,4)))))))))
CRS.new<-crs(r0.brcr.bau)
r0.brcr.bau<-rasterFromXYZ(r0.brcr.bau_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
r50.brcr.bau_df <- as.data.frame(r50.brcr.bau, xy = TRUE)
str(r50.brcr.bau_df)
r50.brcr.bau_df$meandens = ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<0.125,0,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<0.375,0.25,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<0.625,0.5,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<0.75,0.625,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<0.875,0.75,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<1,0.875,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<1.5,1,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<2.5,2,
ifelse(r50.brcr.bau_df$BRCR_BAU_Year50<3.5,3,4)))))))))
CRS.new<-crs(r50.brcr.bau)
r50.brcr.bau<-rasterFromXYZ(r50.brcr.bau_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
#Year 50 - Year 0 (BAU scenario)
bau<-levelplot(r50.brcr.bau-r0.brcr.bau, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main=list(label='Current Fire: Year 50 - Year 0',cex=0.7))
#Plot change over time
#Year 0
r0.brcr.2xfire_df <- as.data.frame(r0.brcr.2xfire, xy = TRUE)
str(r0.brcr.2xfire_df)
r0.brcr.2xfire_df$meandens = ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.125,0,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.375,0.25,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.625,0.5,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.75,0.625,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<0.875,0.75,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<1,0.875,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<1.5,1,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<2.5,2,
ifelse(r0.brcr.2xfire_df$BRCR_IncreasedFire_Year0<3.5,3,4)))))))))
CRS.new<-crs(r0.brcr.2xfire)
r0.brcr.2xfire<-rasterFromXYZ(r0.brcr.2xfire_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
#Year 50
r50.brcr.2xfire_df <- as.data.frame(r50.brcr.2xfire, xy = TRUE)
str(r50.brcr.2xfire_df)
r50.brcr.2xfire_df$meandens = ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<0.125,0,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<0.375,0.25,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<0.625,0.5,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<0.75,0.625,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<0.875,0.75,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<1,0.875,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<1.5,1,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<2.5,2,
ifelse(r50.brcr.2xfire_df$BRCR_IncreasedFire_Year50<3.5,3,4)))))))))
CRS.new<-crs(r50.brcr.2xfire)
r50.brcr.2xfire<-rasterFromXYZ(r50.brcr.2xfire_df[,c("x","y","meandens")],res=c(200,200),crs=CRS.new,digits=2)
#Year 50-0
inc.fire<-levelplot(r50.brcr.2xfire-r0.brcr.2xfire, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main=list(label='Increased Fire: Year 50 - Year 0',cex=0.7))
bau
inc.fire
lattice.options(
layout.heights=list(bottom.padding=list(x=0), top.padding=list(x=0)),
layout.widths=list(left.padding=list(x=0), right.padding=list(x=0))
)
grid.arrange(bau, inc.fire, ncol=2)
lattice.options(
layout.heights=list(bottom.padding=list(x=0), top.padding=list(x=0)),
layout.widths=list(left.padding=list(x=0), right.padding=list(x=0.5))
)
grid.arrange(bau, inc.fire, ncol=2)
grid.arrange(bau, inc.fire,
ncol=2,
main=textGrob("Change in Brown Creeper Density",gp=gpar(fontsize=0.7,font=3)))
grid.arrange(bau, inc.fire,
ncol=2,
main=textGrob("Change in Brown Creeper Density",gp=gpar(fontsize=10,font=1)))
tg<-textGrob("Change in Brown Creeper Density",gp=gpar(fontsize=10,font=1))
grid.arrange(tg, bau, inc.fire,
ncol=2)
tg<-textGrob("Change in Brown Creeper Density",gp=gpar(fontsize=10,font=1))
margin <- unit(0.5, "line")
grided<-grid.arrange(bau, inc.fire, ncol=2)
grid.arrange(tg, grided,
heights = unit.c(grobHeight(tg) + 1.2*margin,
unit(1,"null")))
r50.brcr.bau
inc.fire.minus.bau<-levelplot(r50.brcr.2xfire-r50.brcr.bau, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main=list(label='Increased Fire: Year 50 - Year 0',cex=0.7))
inc.fire.minus.bau
inc.fire.minus.bau<-levelplot(r50.brcr.2xfire-r50.brcr.bau, margin=F,
par.settings = rasterTheme(region=magma(10), axis.line = list(col = "transparent"),
strip.background = list(col = 'transparent'),
strip.border = list(col = 'transparent')), scales = list(col = "transparent"),
main=list(label='Year 50: Increased Fire - BAU',cex=0.7))
inc.fire.minus.bau
grided<-grid.arrange(bau, inc.fire, inc.fire.minus.bau, ncol=3)
grid.arrange(tg, grided,
heights = unit.c(grobHeight(tg) + 1.2*margin,
unit(1,"null")))
grided<-grid.arrange(bau, inc.fire, ncol=2)
grid.arrange(tg, grided,
heights = unit.c(grobHeight(tg) + 1.2*margin,
unit(1,"null")))
grided<-grid.arrange(bau, inc.fire, bau, inc.fire, nrow=2, ncol=2)
grid.arrange(tg, grided,
heights = unit.c(grobHeight(tg) + 1.2*margin,
unit(1,"null")))
tiff('ALCESOnline_BrownCreeperDensityMap.tiff', units="in", width=15, height=15, res=300)
grid.arrange(tg, grided,
heights = unit.c(grobHeight(tg) + 1.2*margin,
unit(1,"null")))
dev.off()
